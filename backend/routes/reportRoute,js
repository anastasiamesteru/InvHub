import express from 'express';
import Report from '../models/report.js';
import { verifyToken } from '../middleware/authMiddleware.js';

const reportRoute = express.Router();

//Create a new report
reportRoute.post("/create",verifyToken, async (req, res) => {
    try {
        const report = new Report({
            ...req.body,
            userEmail: req.user.email,
        });

        await report.save();
        res.status(201).json(report);
    } catch (error) {
        console.error('Error:', error);

        return res.status(400).json({ message: error.message || 'Something went wrong while creating the report.' });
    }
});



//Get all reports
reportRoute.get("/getall", verifyToken,async (req, res) => {
    try {
        const report = await Report.find({ userEmail: req.user.email });
        res.status(200).json(report);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

// Get one report 
reportRoute.get("/:id", verifyToken, async (req, res) => {
    try {
        const id = req.params.id.trim();

        if (!id.match(/^[0-9a-fA-F]{24}$/)) {
            return res.status(400).json({ error: "Invalid ObjectId format" });
        }

        const report = await Report.findOne({ _id: id, userEmail: req.user.email });

        if (!report) {
            return res.status(404).json({ message: "Report not found" });
        }

        res.status(200).json(report);
    } catch (error) {
        console.error("Error fetching report:", error.message);
        res.status(500).json({ message: "Server error", error: error.message });
    }
});


// Delete a report by ID
reportRoute.delete('/:id', verifyToken, async (req, res) => {
    try {
        const id = req.params.id.trim();
        const deletedReport = await Report.findOneAndDelete(
            { _id: id, userEmail: req.user.email },
            req.body,
            { new: true, runValidators: true }
        );
        if (!deletedReport) {
            return res.status(404).json({ message: 'Report not found' });
        }

        res.status(200).json({ message: 'Report deleted successfully' });
    } catch (error) {
        console.error(error);
        res.status(500).json({ message: 'Error deleting report', error: error.message });
    }
});

export default reportRoute;
